{"version":3,"sources":["components/NotFoundPage.tsx","components/HomePage.tsx","components/PersonLink.tsx","components/Loader/Loader.tsx","components/peoplePage.tsx","api.ts","App.tsx","index.tsx"],"names":["NotFoundPage","className","HomePage","PersonLink","person","to","slug","cn","sex","name","Loader","PeoplePage","peopleList","loadingError","loading","useParams","length","map","fatherLink","find","potentialPerson","fatherName","motherLink","motherName","born","died","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","App","useState","setPeopleList","setLoadingError","setLoading","loadPeople","peopleData","useEffect","role","isActive","path","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.0c914122.chunk.js","sourcesContent":["export const NotFoundPage: React.FC = () => {\n  return (\n    <>\n      <h1 className=\"title\">Page not found</h1>\n    </>\n  );\n};\n","export const HomePage: React.FC = () => {\n  return (\n    <>\n      <h1 className=\"title\">Home Page</h1>\n    </>\n  );\n};\n","import cn from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../types';\n\ninterface Props {\n  person: Person;\n}\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  return (\n    <Link\n      to={`/people/${person.slug}`}\n      className={cn({\n        'has-text-danger': person.sex === 'f',\n      })}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import cn from 'classnames';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\nimport { Loader } from './Loader/Loader';\n\ninterface Props {\n  peopleList: Person[];\n  loadingError: boolean;\n  loading: boolean;\n}\n\nexport const PeoplePage: React.FC<Props> = ({\n  peopleList, loadingError, loading,\n}) => {\n  const { slug } = useParams();\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {loading && <Loader />}\n\n          {loadingError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {peopleList.length === 0 && !loadingError && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {peopleList.length > 0\n            && (\n              <table\n                data-cy=\"peopleTable\"\n                className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n              >\n                <thead>\n                  <tr>\n                    <th>Name</th>\n                    <th>Sex</th>\n                    <th>Born</th>\n                    <th>Died</th>\n                    <th>Mother</th>\n                    <th>Father</th>\n                  </tr>\n                </thead>\n\n                <tbody>\n                  {peopleList.map((person) => {\n                    const fatherLink = peopleList\n                      .find((potentialPerson) => potentialPerson.name\n                        === person.fatherName);\n                    const motherLink = peopleList\n                      .find((potentialPerson) => potentialPerson.name\n                        === person.motherName);\n\n                    return (\n                      <tr\n                        data-cy=\"person\"\n                        key={person.name}\n                        className={cn({\n                          'has-background-warning': slug === person.slug,\n                        })}\n                      >\n                        <td>\n                          <PersonLink person={person} />\n                        </td>\n\n                        <td>{person.sex}</td>\n                        <td>{person.born}</td>\n                        <td>{person.died}</td>\n                        <td>\n                          {motherLink\n                            ? (\n                              <PersonLink person={motherLink} />\n                            )\n                            : (person.motherName || '-')}\n                        </td>\n                        <td>\n                          {fatherLink\n                            ? (\n                              <PersonLink person={fatherLink} />\n                            )\n                            : (person.fatherName || '-')}\n                        </td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </table>\n            )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/12react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import {\n  NavLink, Navigate, Route, Routes,\n} from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport cn from 'classnames';\n\nimport './App.scss';\n\nimport { Person } from './types';\nimport { NotFoundPage } from './components/NotFoundPage';\nimport { HomePage } from './components/HomePage';\nimport { PeoplePage } from './components/peoplePage';\nimport { getPeople } from './api';\n\nexport const App = () => {\n  const [peopleList, setPeopleList] = useState<Person[]>([]);\n  const [loadingError, setLoadingError] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const loadPeople = async () => {\n    setLoading(true);\n    try {\n      const peopleData = await getPeople();\n\n      setPeopleList(peopleData);\n    } catch {\n      setLoadingError(true);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadPeople();\n  }, []);\n\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink\n              className={\n                ({ isActive }) => cn('navbar-item',\n                  { 'has-background-grey-lighter': isActive })\n              }\n              to=\"/\"\n            >\n              Home\n            </NavLink>\n\n            <NavLink\n              className={\n                ({ isActive }) => cn('navbar-item',\n                  { 'has-background-grey-lighter': isActive })\n              }\n              to=\"/people\"\n            >\n              People\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"*\" element={<NotFoundPage />} />\n            <Route path=\"/\" element={<HomePage />} />\n            <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n            <Route\n              path=\"people\"\n              element={\n                (\n                  <PeoplePage\n                    peopleList={peopleList}\n                    loadingError={loadingError}\n                    loading={loading}\n                  />\n                )\n              }\n            >\n              <Route\n                path=\":slug\"\n                element={\n                  (\n                    <PeoplePage\n                      peopleList={peopleList}\n                      loadingError={loadingError}\n                      loading={loading}\n                    />\n                  )\n                }\n              />\n            </Route>\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}